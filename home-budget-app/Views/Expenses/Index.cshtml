@model IEnumerable<home_budget_app.Models.Expense>

@using home_budget_app.Models
@using home_budget_app.Extensions

@{
    ViewData["Title"] = "Wydatki";
    var pageSizes = new[] { 10, 25, 100 };
    int currentPage = (int)ViewBag.CurrentPage;
    int totalPages = (int)ViewBag.TotalPages;
    int selectedPageSize = (int)ViewBag.PageSize;
    string sortOrder = (string)ViewBag.SortOrder;
    string categoryFilter = (string)(ViewBag.CategoryFilter ?? string.Empty);

    int? currentYearFilter = ViewBag.YearFilter as int?;
    int? currentMonthFilter = ViewBag.MonthFilter as int?;

    // Zakres paginacji
    int startPage = currentPage - 2;
    if (startPage < 1) startPage = 1;
    int endPage = startPage + 4;
    if (endPage > totalPages)
    {
        endPage = totalPages;
        startPage = Math.Max(1, endPage - 4);
    }
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />

<h1 class="my-4">Wydatki</h1>

<p>
    <a asp-action="Create" class="btn btn-primary mb-3">Dodaj nowy</a>
</p>

<form id="filterForm" method="get" asp-action="Index" class="form-inline mb-4">
    <input type="hidden" name="sortOrder" value="@sortOrder" />


    <div class="form-group mr-3">
        <label for="yearFilter" class="mr-2">Rok:</label>
        <select id="yearFilter" name="yearFilter" class="form-control form-control-sm" onchange="document.getElementById('filterForm').submit();">
            <option value="">Wszystkie</option>
            @{
                var years = ViewBag.Years as List<int> ?? new List<int>();
                foreach (var y in years)
                {
                    if (currentYearFilter == y)
                    {
                        <option value="@y" selected>@y</option>
                    }
                    else
                    {
                        <option value="@y">@y</option>
                    }
                }
            }
        </select>
    </div>
    <div class="form-group mr-3">
        <label for="monthFilter" class="mr-2">Miesiąc:</label>
        <select id="monthFilter" name="monthFilter" class="form-control form-control-sm" onchange="document.getElementById('filterForm').submit();">
            <option value="">Wszystkie</option>
            @{
                var monthSource = ViewBag.Months as System.Collections.IEnumerable;
            }
            @if (monthSource != null)
            {
                foreach (dynamic m in monthSource)
                {
                    try
                    {
                        var num = (int)m.Number;
                        var name = (string)m.Name;
                        if (!string.IsNullOrEmpty(name))
                        {
                            if (currentMonthFilter == num)
                            {
                                <option value="@num" selected>@name</option>
                            }
                            else
                            {
                                <option value="@num">@name</option>
                            }
                        }
                    }
                    catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException)
                    {
                        <option value="">błąd danych miesiąca</option>
                    }
                }
            }
        </select>
    </div>
    <div class="form-group mr-3">
        <label for="categoryFilter" class="mr-2">Kategoria:</label>
        <select id="categoryFilter" name="categoryFilter" class="form-control form-control-sm" onchange="document.getElementById('filterForm').submit();">
            @if (string.IsNullOrEmpty(categoryFilter))
            {
                <option value="" selected>Wszystkie</option>
            }
            else
            {
                <option value="">Wszystkie</option>
            }
            @foreach (ExpenseCategory cat in Enum.GetValues(typeof(ExpenseCategory)))
            {
                if (categoryFilter == cat.ToString())
                {
                    <option value="@cat" selected>@cat.GetDisplayName()</option>
                }
                else
                {
                    <option value="@cat">@cat.GetDisplayName()</option>
                }
            }
        </select>
    </div>
    <div class="form-group mr-3">
        <label for="pageSize" class="mr-2">Pozycji:</label> @* Changed "Strona" to "Pozycji" for clarity *@
        <select id="pageSize" name="pageSize" class="form-control form-control-sm" onchange="document.getElementById('filterForm').submit();">
            @{
                foreach (var size in pageSizes)
                {
                    if (selectedPageSize == size)
                    {
                        <option value="@size" selected>@size</option>
                    }
                    else
                    {
                        <option value="@size">@size</option>
                    }
                }
            }
        </select>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-light">
            <tr>
                <th scope="col">ID</th>
                <th scope="col">Kategoria</th>
                <th scope="col">
                    Data
                    <a href="@Url.Action("Index", new { page = 1, pageSize = selectedPageSize, sortOrder = "date_asc", categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })" title="Od najstarszych">
                        <i class="bi bi-arrow-up"></i>
                    </a>
                    <a href="@Url.Action("Index", new { page = 1, pageSize = selectedPageSize, sortOrder = "date_desc", categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })" title="Od najnowszych">
                        <i class="bi bi-arrow-down"></i>
                    </a>
                </th>
                <th scope="col">
                    Kwota
                    <a href="@Url.Action("Index", new { page = 1, pageSize = selectedPageSize, sortOrder = "amount_asc", categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })" title="Rosnąco"><i class="bi bi-arrow-up"></i></a>
                    <a href="@Url.Action("Index", new { page = 1, pageSize = selectedPageSize, sortOrder = "amount_desc", categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })" title="Malejąco"><i class="bi bi-arrow-down"></i></a>
                </th>
                <th scope="col">Komentarz</th>
                <th scope="col">Akcje</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td><a asp-action="Details" asp-route-id="@item.Id">@item.Id</a></td>
                    <td>@item.Category.GetDisplayName()</td>
                    <td>@item.Date.ToString("yyyy-MM-dd")</td>
                    <td>@item.Amount.ToString("C")</td>
                    <td>@item.Notes</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning mr-1" title="Edytuj">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Usuń">
                            <i class="bi bi-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<nav>
    <ul class="pagination justify-content-center">
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })">Poprzednia</a>
            </li>
        }
        @if (startPage > 1)
        {
            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })">1</a></li>
            if (startPage > 2)
            {
                <li class="page-item"><span class="page-link">&hellip;</span></li>
            }
        }
        @for (int i = startPage; i <= endPage; i++)
        {
            var active = i == currentPage ? " active" : "";
            @:
            <li class="page-item@active"><a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })">@i</a></li>
        }
        @if (endPage < totalPages)
        {
            if (endPage < totalPages - 1)
            {
                <li class="page-item"><span class="page-link">&hellip;</span></li>
            }
            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = totalPages, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })">@totalPages</a></li>
        }
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })">Następna</a>
            </li>
        }
    </ul>
</nav>