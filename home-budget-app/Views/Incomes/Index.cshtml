@model IEnumerable<home_budget_app.Models.Income>
@using home_budget_app.Models
@using home_budget_app.Extensions

@{
    ViewData["Title"] = "Przychody";
    var pageSizes = new[] { 10, 25, 50, 100 }; // dostępne rozmiary stron
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 0;
    int selectedPageSize = ViewBag.PageSize ?? 10;
    string sortOrder = ViewBag.SortOrder ?? "date_desc";
    string categoryFilter = ViewBag.CategoryFilter ?? string.Empty;
    int? currentYearFilter = ViewBag.YearFilter as int?; // filtry roku i miesiąca
    int? currentMonthFilter = ViewBag.MonthFilter as int?;

    // logika dla zakresu stron paginacji
    int startPage = Math.Max(1, currentPage - 2);
    int endPage = Math.Min(totalPages, currentPage + 2);
    if (endPage - startPage + 1 < 5 && totalPages >= 5) // próbuj wyświetlić 5 stron jeśli to możliwe
    {
        if (startPage == 1) endPage = Math.Min(totalPages, startPage + 4);
        else if (endPage == totalPages) startPage = Math.Max(1, endPage - 4);
    }
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />

<h1 class="my-4">Przychody</h1>

<p>
    <a asp-action="Create" class="btn btn-primary mb-3">Dodaj nowy przychód</a>
</p>

<form id="filterForm" method="get" asp-action="Index" class="form-inline mb-4">
    <input type="hidden" name="sortOrder" value="@sortOrder" />

    <div class="form-group mr-2 mb-2">
        <label for="yearFilter" class="mr-1">Rok:</label>
        <select id="yearFilter" name="yearFilter" class="form-control form-control-sm" onchange="document.getElementById('filterForm').submit();">
            <option value="">Wszystkie</option>
            @{
                var years = ViewBag.Years as List<int> ?? new List<int>();
                foreach (var y in years)
                {
                    <option value="@y" selected="@(currentYearFilter == y)">@y</option>
                }
            }
        </select>
    </div>

    <div class="form-group mr-2 mb-2">
        <label for="monthFilter" class="mr-1">Miesiąc:</label>
        <select id="monthFilter" name="monthFilter" class="form-control form-control-sm" onchange="document.getElementById('filterForm').submit();">
            <option value="">Wszystkie</option>
            @{
                var monthSource = ViewBag.Months as System.Collections.IEnumerable;
            }
            @if (monthSource != null) // sprawdź czy nie jest null
            {
                foreach (dynamic m in monthSource) // iteruj traktując każdy element jako dynamiczny
                {
                    try // blok try-catch dla bezpieczeństwa przy dostępie do dynamicznych właściwości
                    {
                        var num = (int)m.Number;
                        var name = (string)m.Name;
                        if (!string.IsNullOrEmpty(name)) // upewnij się, że nazwa miesiąca nie jest pusta
                        {
                            <option value="@num" selected="@(currentMonthFilter == num)">@name</option>
                        }
                    }
                    catch (Microsoft.CSharp.RuntimeBinder.RuntimeBinderException)
                    {
                        <option value="">błąd danych miesiąca</option>
                    }
                }
            }
        </select>
    </div>

    <div class="form-group mr-2 mb-2">
        <label for="categoryFilter" class="mr-1">Kategoria:</label>
        <select id="categoryFilter" name="categoryFilter" class="form-control form-control-sm" onchange="document.getElementById('filterForm').submit();">
            <option value="" selected="@(string.IsNullOrEmpty(categoryFilter))">Wszystkie</option>
            @foreach (IncomeCategory cat in Enum.GetValues(typeof(IncomeCategory)))
            {
                <option value="@cat" selected="@(categoryFilter == cat.ToString())">@cat.GetDisplayName()</option>
            }
        </select>
    </div>

    <div class="form-group mr-2 mb-2">
        <label for="pageSize" class="mr-1">Na stronie:</label>
        <select id="pageSize" name="pageSize" class="form-control form-control-sm" onchange="document.getElementById('filterForm').submit();">
            @foreach (var size in pageSizes)
            {
                <option value="@size" selected="@(selectedPageSize == size)">@size</option>
            }
        </select>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-light">
            <tr>
                <th>
                    Kategoria
                    <a href="@Url.Action("Index", new { page = 1, pageSize = selectedPageSize, sortOrder = (sortOrder == "category_asc" ? "category_desc" : "category_asc"), categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })"
                       title="@(sortOrder == "category_asc" ? "sortuj malejąco" : "sortuj rosnąco")">
                        <i class="bi @(sortOrder == "category_asc" ? "bi-sort-alpha-down-alt" : (sortOrder == "category_desc" ? "bi-sort-alpha-up-alt" : "bi-filter"))"></i>
                    </a>
                </th>
                <th>
                    Data
                    <a href="@Url.Action("Index", new { page = 1, pageSize = selectedPageSize, sortOrder = (sortOrder == "date_asc" ? "date_desc" : "date_asc"), categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })"
                       title="@(sortOrder == "date_asc" ? "od najnowszych" : "od najstarszych")">
                        <i class="bi @(sortOrder == "date_asc" ? "bi-sort-down" : (sortOrder == "date_desc" ? "bi-sort-up" : "bi-filter"))"></i>
                    </a>
                </th>
                <th>
                    Kwota
                    <a href="@Url.Action("Index", new { page = 1, pageSize = selectedPageSize, sortOrder = (sortOrder == "amount_asc" ? "amount_desc" : "amount_asc"), categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })"
                       title="@(sortOrder == "amount_asc" ? "malejąco" : "rosnąco")">
                        <i class="bi @(sortOrder == "amount_asc" ? "bi-sort-numeric-down" : (sortOrder == "amount_desc" ? "bi-sort-numeric-up" : "bi-filter"))"></i>
                    </a>
                </th>
                <th>Komentarz</th>
                <th>Akcje</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Category.GetDisplayName()</td>
                        <td>@item.Date.ToString("yyyy-MM-dd")</td>
                        <td>@item.Amount.ToString("C")</td>
                        <td>@item.Notes</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning mr-1" title="edytuj"><i class="bi bi-pencil"></i></a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info mr-1" title="szczegóły"><i class="bi bi-info-circle"></i></a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="usuń"><i class="bi bi-trash"></i></a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">brak przychodów do wyświetlenia.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (totalPages > 0)
{
    <nav aria-label="nawigacja po stronach przychodów">
        <ul class="pagination justify-content-center">
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })" aria-label="pierwsza strona">
                        <span aria-hidden="true">&laquo;&laquo;</span>
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })" aria-label="poprzednia strona">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled"><span class="page-link">&laquo;&laquo;</span></li>
                <li class="page-item disabled"><span class="page-link">&laquo;</span></li>
            }

            @if (startPage > 1)
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })">1</a></li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled"><span class="page-link">&hellip;</span></li>
                }
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })">@i</a>
                </li>
            }

            @if (endPage < totalPages)
            {
                @if (endPage < totalPages - 1)
                {
                    <li class="page-item disabled"><span class="page-link">&hellip;</span></li>
                }
                <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = totalPages, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })">@totalPages</a></li>
            }

            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })" aria-label="następna strona">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = totalPages, pageSize = selectedPageSize, sortOrder = sortOrder, categoryFilter = categoryFilter, yearFilter = currentYearFilter, monthFilter = currentMonthFilter })" aria-label="ostatnia strona">
                        <span aria-hidden="true">&raquo;&raquo;</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled"><span class="page-link">&raquo;</span></li>
                <li class="page-item disabled"><span class="page-link">&raquo;&raquo;</span></li>
            }
        </ul>
    </nav>
}